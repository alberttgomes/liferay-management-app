components:
    schemas:
        Employee:
            description:
                https://schema.org/Employee
            properties:
                employeeId:
                    format: int64
                    type: integer
                companyId:
                    format: int64
                    type: integer
                department:
                    type: string
                firstName:
                    type: string
                groupId:
                    format: int64
                    type: integer
                lastName:
                    type: string
                position:
                    type: string
                isManager:
                    type: boolean
                level:
                    format: int64
                    type: integer
                managerIdPK:
                    format: int64
                    type: integer
                stateCode:
                    type: string
                status:
                    format: int64
                    type: integer
                userId:
                    format: int64
                    type: integer
            type: object
        Manager:
            description:
                https://schema.org/Manager
            properties:
                managerId:
                    format: int64
                    type: integer
                employeeIdPK:
                    format: int64
                    type: integer
info:
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: Management Analytics DXP Entity REST
    version: v1.0
openapi: 3.0.1
paths:
    "/employee":
        get:
            operationId: getEmployees
            responses:
                200:
                    description: "Get all employees registered"
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Employee"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Employee"
                                type: array
            tags: [ "Employee" ]
        post:
            operationId: postEmployee
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Employee"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Employee"
            responses:
                201:
                    description: "Post a new employee"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Employee"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Employee"
            tags: [ "Employee" ]
    "/employee/by-manager-name/{managerFirstName}/{managerLastName}":
        post:
            operationId: postEmployeeByManagerName
            parameters:
                - in: path
                  name: managerFirstName
                  required: true
                  schema:
                      type: string
                - in: path
                  name: managerLastName
                  required: true
                  schema:
                      type: string
            responses:
                201:
                    description: "Post a new employee"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Employee"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Employee"
            tags: [ "Employee" ]
    "/employee/delete-employee/{employeeId}":
        delete:
            operationId: deleteEmployeeById
            parameters:
                - in: path
                  name: employeeId
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: "Employee was deleted with success"
            tags: [ "Employee" ]
    "/employee/employee-by-id/{employeeId}":
        get:
            operationId: getEmployeeById
            parameters:
                - in: path
                  name: employeeId
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: "Employee Found!"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Employee"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Employee"
            tags: [ "Employee" ]
    "/manager":
        get:
            operationId: getManager
            responses:
                200:
                    description: "Get all available managers"
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Manager"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Manager"
                                type: array
            tags: [ "Manager" ]
        post:
            operationId: postManager
            parameters:
                - in: path
                  name: employee
                  required: true
                  schema:
                      $ref: "#/components/schemas/Manager"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Manager"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Manager"
            responses:
                201:
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Manager"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Manager"
            tags: [ "Manager" ]
    "/manager/delete-manager-by-id/{managerId}":
        delete:
            operationId: deleteManagerById
            parameters:
                - in: path
                  name: employeeId
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: "Delete manager by id"
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Manager"
                                type: object
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Manager"
                                type: object
            tags: [ "Manager" ]
    "/manager/get-manager-by-id/{managerId}":
        get:
            operationId: getManageById
            parameters:
                - in: path
                  name: managerId
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: "Getting manager by id"
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Manager"
                                type: object
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Manager"
                                type: object
            tags: [ "Manager" ]
    "/manager/manager-get-employees/{managerId}":
        get:
            operationId: getEmployeesByManagerId
            parameters:
                - in: path
                  name: managerId
                  required: true
                  schema:
                      type: integer
            responses:
                200:
                    description: "Get employees by Manager id"
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Employee"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Employee"
                                type: array
            tags: [ "Employee" ]
    "/manager/update/{managerId}":
        put:
            operationId: updateManagerById
            parameters:
                - in: path
                  name: managerId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Manager"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Manager"
            responses:
                200:
                    description: "Update manager by id"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Manager"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Manager"
            tags: [ "Manager" ]
